{"version":3,"sources":["services/calendarService.js","components/CalendarForm.js","styles/styledComponents.js","components/CalendarEntry.js","utils/timeConversion.js","components/EntryList.js","components/Calendar.js","components/Today.js","App.js","index.js"],"names":["getAll","a","axios","get","response","data","addNew","objectToAdd","post","remove","id","delete","CalendarForm","useState","date","setDate","time","setTime","content","setContent","validDateRegex","RegExp","validTimeRegex","onSubmit","event","preventDefault","test","window","alert","value","onChange","target","type","ListedItem","styled","td","Heading","h1","CalendarEntry","dateTime","deleteEntry","ISOString","split","year","month","day","hours","minutes","dateSTR","timeSTR","ISOtoTimeString","onClick","EntryList","listOfEntries","map","e","key","_id","Calendar","calendarEntries","setCalendarEntries","sortByTime","Number","Date","parse","timeStringToISO","calendarService","then","concat","sort","catch","error","filter","c","Today","today","now","todaysCal","getDate","getMonth","getFullYear","App","useEffect","calendar","deleteOldEntries","forEach","entry","e1","e2","basename","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8254abf.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/calendar'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst addNew = async (objectToAdd) => {\n  const response = await axios.post(baseUrl, objectToAdd)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const response = await axios.delete(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default {getAll, addNew, remove}","import React, {useState} from 'react'\n\nconst CalendarForm = ({ addNew }) => {\n  const [date, setDate] = useState('')\n  const [time, setTime] = useState('')\n  const [content, setContent] = useState('')\n\n  const validDateRegex = RegExp(\n    // validates DD/MM/YYYY\n    /^(0?[1-9]|[12][0-9]|3[01])[/](0?[1-9]|1[012])[/]\\d{4}$/\n  )\n\n  const validTimeRegex = RegExp(\n    /([0-2][0-9]):([0-5][0-9])/\n  )\n\n  const validateForm = () => {\n    if (validDateRegex.test(date) && validTimeRegex.test(time)){\n      return true\n    }\n    return false\n  }\n\n  const addEntry = (event) => {\n    event.preventDefault()\n\n    if (validateForm()) {\n      setDate('')\n      setTime('')\n      setContent('')\n      addNew(date, time, content)\n    } else {\n      window.alert('virhe, ilmoita pvm muodossa pp/kk/vvvv ja aika muodossa tt:mm')\n    }\n  }\n\n  return (\n    <form onSubmit={addEntry}>\n      <div>\n        pvm:\n        <input\n          value = {date}\n          onChange = {(event) => setDate(event.target.value)}\n        />\n      </div>\n      <div>\n        aika:\n        <input\n          value = {time}\n          onChange = {(event) => setTime(event.target.value)}\n        />\n      </div>\n      <div>\n        kuvaus:\n        <input\n          value = {content}\n          onChange = {(event) => setContent(event.target.value)}\n        />\n      </div>\n      <button type=\"submit\">add</button>\n    </form>\n  )\n}\n\nexport default CalendarForm","import styled from 'styled-components'\n\nexport const ListedItem = styled.td`\n  font-family: Quicksand;\n  font-size: 14px\n`\n\nexport const Heading = styled.h1`\n  color: #1a21ad\n`","import React from 'react'\nimport { ListedItem } from '../styles/styledComponents'\nimport { ISOtoTimeString } from '../utils/timeConversion'\n\nconst CalendarEntry = ({dateTime, content, id, deleteEntry}) => {\n  return (\n    <tr>\n      <ListedItem>{ISOtoTimeString(dateTime)}:</ListedItem>\n      <ListedItem>{content}</ListedItem>\n      <td><button onClick={() => deleteEntry(id)}>poista</button></td>\n    </tr>\n  )\n}\n\nexport default CalendarEntry","\nexport const ISOtoTimeString = (ISOString) => {\n  const date = ISOString.split('T')[0]\n  const time = ISOString.split('T')[1]\n\n  const year = date.split('-')[0]\n  const month = date.split('-')[1]\n  const day = date.split('-')[2]\n\n  const hours = time.split(':')[0]\n  const minutes = time.split(':')[1]\n\n  const dateSTR = `${day}/${month}/${year}`\n  const timeSTR = `${hours}:${minutes}`\n\n  return `${dateSTR} ${timeSTR}`\n}\n\nexport const timeStringToISO = (date, time) => {\n  const day = date.split('/')[0]\n  const month = date.split('/')[1]\n  const year = date.split('/')[2]\n\n  // timezone conversion UTC -> UTC+2(finland)\n  let hours = Number(time.split(':')[0]) + 2\n  if (hours < 10){\n    hours = `0${hours}`\n  }\n\n  const minutes = time.split(':')[1]\n\n  return Date.parse(`${year}-${month}-${day}T${hours}:${minutes}`)\n}","import React from 'react'\nimport CalendarEntry from './CalendarEntry'\n\nconst EntryList = ({ listOfEntries, deleteEntry }) => (\n  <table>\n    <tbody>\n      {listOfEntries.map(e => \n        <CalendarEntry\n          key={e._id}\n          dateTime={e.dateTime}\n          content={e.content}\n          id={e._id}\n          deleteEntry={deleteEntry}\n        />\n      )}\n    </tbody>\n  </table>\n)\n\nexport default EntryList","import React from 'react'\nimport calendarService from '../services/calendarService'\n\nimport CalendarFrom from './CalendarForm'\nimport { timeStringToISO } from '../utils/timeConversion'\nimport EntryList from './EntryList'\nimport { Heading } from '../styles/styledComponents'\n\nconst Calendar = ({ calendarEntries, setCalendarEntries, sortByTime }) => {\n  const addNew = (date, time, content) => {\n    const dateTime = timeStringToISO(date, time)\n\n    const objectToAdd = {\n      dateTime: dateTime,\n      content: content\n    }\n\n    calendarService\n      .addNew(objectToAdd)\n      .then((response) => {\n        setCalendarEntries(calendarEntries.concat(response).sort(sortByTime))\n      })\n      .catch((error) => {\n        window.alert(`virhe: ${error}`)\n      })\n  }\n\n  const deleteEntry = (id) => {\n    calendarService\n      .remove(id)\n      .then(() => {\n        setCalendarEntries(calendarEntries.filter(c => c._id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h2>lisää</h2>\n      <CalendarFrom addNew={addNew}/>\n      <Heading>Muista!</Heading>\n      <EntryList\n        listOfEntries={calendarEntries}\n        deleteEntry={deleteEntry}\n      />\n    </div>\n  )\n}\n\nexport default Calendar","import React from 'react'\nimport { Heading } from '../styles/styledComponents'\nimport EntryList from './EntryList'\n\nconst Today = ({ calendarEntries }) => {\n  const today = new Date(Date.now())\n\n  const todaysCal = calendarEntries.filter(e => {\n    const dateTime = new Date(Date.parse(e.dateTime))\n\n    return (\n        dateTime.getDate() === today.getDate()\n      && dateTime.getMonth() === today.getMonth()\n      && dateTime.getFullYear() === today.getFullYear()\n    )\n})\n\n  return(\n    <div>\n      <Heading>heips moips päivän jutut:</Heading>\n      <EntryList listOfEntries={todaysCal}/>\n    </div>\n  )\n}\n\nexport default Today","import React, { useState, useEffect } from 'react'\nimport {\n  HashRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\n\nimport Calendar from './components/Calendar'\nimport Today from './components/Today'\nimport calendarService from './services/calendarService'\n\nconst App = () => {\n  const [calendarEntries, setCalendarEntries] = useState([])\n\n  useEffect(() => {\n    calendarService\n      .getAll()\n      .then((calendar) => {\n        deleteOldEntries(calendar)\n        setCalendarEntries(calendar.sort(sortByTime))\n      })\n  }, [])\n\n  const deleteOldEntries = (calendar) => {\n    calendar.forEach(entry => {\n      if (Date.parse(entry.dateTime) < Date.now()) {\n        calendarService.remove(entry._id)\n      }\n    })\n  }\n\n  const sortByTime = (e1,e2) => {\n    if (e1.dateTime < e2.dateTime){\n      return -1\n    } else if (e1.dateTime > e2.dateTime){\n      return 1\n    } else {\n      return 0\n    }\n  }\n\n  return (\n    <Router basename={'/'}>\n      <div>\n        <Link to=\"/\">koti</Link>\n        <Link to=\"/calendar\">kalenteri</Link>\n      </div>\n\n      <Switch>\n        <Route path=\"/calendar\">\n          <Calendar\n            calendarEntries={calendarEntries}\n            setCalendarEntries={setCalendarEntries}\n            sortByTime={sortByTime}\n          />\n        </Route>\n        <Route path=\"/\">\n          <Today\n            calendarEntries={calendarEntries}\n          />\n        </Route>\n      </Switch>\n  \n    </Router>\n  ) \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}